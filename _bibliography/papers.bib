---
---
@inproceedings{Nascimento.2022.10.1007/978-3-030-99587-4_22, 
	year = {2022}, 
	author = {Nascimento, Francisco Assis Moreira do and Hessel, Fabiano}, 
	title = {{A Decentralized Federated Learning Architecture for Intrusion Detection in IoT Systems}}, 
	booktitle = {Proceedings of the 36th International Conference on Advanced Information Networking and Applications (AINA-2022), Volume 2}, 
	editor={Barolli, Leonard and Hussain, Farookh and Enokido, Tomoya},
	isbn = {9783030995867}, 
	doi = {10.1007/978-3-030-99587-4\_22}, 
	abstract = {{Internet of Things (IoT) systems are vulnerable to several attacks, mainly due to the weakness of IoT devices, which have little computational and memory power, necessary for more sophisticated security features. In addition, IoT systems are distributed systems and thus inherit all problems related to the need to guarantee confidentiality, integrity, and availability. One of the traditional strategies to deal with these problems involves intrusion detection and prevention techniques. It is usual to implement them in a centralized way. In addition to not being scalable for IoT systems with an increasing number of devices, it implies an unacceptable single point of failure. Besides, sending all collected data to a centralized server in the cloud poses a great risk to the privacy of information. This paper presents a decentralized architecture for intrusion detection in IoT-based systems, which is based on federated machine learning, combined with distributed ledger technologies for access control, allowing a mechanism to minimize security risks.}}, 
	pages = {256--268}, 
	series = {Lecture Notes in Networks and Systems}, 
	publisher = {Springer International Publishing}, 
	address = {Cham}, 
	keywords = {federated learning, Internet of Things}
}


@article{Fontoura.2019.10.1109/taes.2019.2915406, 
	year = {2019}, 
	keywords = {avionic systems,distributed real,model check-,reconfiguration,schedulability analysis,time embedded systems}, 
	title = {{Timing Assurance of Avionic Reconfiguration Schemes using Formal Analysis}}, 
	author = {Fontoura, A. A. Da and Nascimento, F. A. M. Do and Nadjm-Tehrani, S. and Freitas, E. P. De}, 
	journal = {IEEE Transactions on Aerospace and Electronic Systems}, 
	doi = {10.1109/taes.2019.2915406}, 
	abstract = {{Reconfigurable avionics systems can tolerate faults by moving functionalities from failed components to another available system component. This paper proposes a distributed reconfigurable architecture for application migration from failed modules to working ones. The feasible system reconfiguration states are determined off-line to provide the expected configuration in foreseen situations. Model checking is used to determine feasible configurations evaluating specific temporal properties. A case study is used to show the application of the presented approach as a proof of concept.}}, 
	pages = {1--1}, 
	number = {c}, 
	volume = {PP}, 
	month = {01}
}

@article{Nascimento.2012.10.1007/s11334-011-0175-y, 
	year = {2012}, 
	keywords = {Model-driven engineering, Design automation, Design space exploration, Embedded systems}, 
	title = {{A model-driven engineering framework for embedded systems design}}, 
	author = {Nascimento, Francisco Assis M. and Oliveira, Marcio F. S. and Wagner, Fl√°vio Rech}, 
	journal = {Innovations in Systems and Software Engineering}, 
	doi = {10.1007/s11334-011-0175-y}, 
	abstract = {{This work presents a Model-Driven Engineering (MDE) framework to improve embedded system design. The framework adopts concepts from MDE for the automatic generation of a control and data flow internal representation, starting from the functional specification of an embedded application described using UML class and sequence diagrams. By means of transformations rules applied on the UML model of the embedded system, an MOF-based (Meta Object Facility is a standard representation for meta-models and models proposed by OMG) internal representation is automatically obtained, which is iteratively mapped into a hardware/software implementation by means of model transformations. This mapping is optimized by a design space exploration (DSE) method based on a categorical graph product. The model transformations have also as input a platform model, which specifies the available hardware, software and interface resources, and produce an implementation model, on which software synthesis, communication synthesis and high-level synthesis algorithms are applied to generate the final implementation. A case study is described to illustrate the application of the framework.}}, 
	pages = {19--33}, 
	number = {1}, 
	volume = {8}, 
	month = {11},
	selected=true
}

@inproceedings{Nascimento.2006, 
	year = {2006}, 
	author = {Nascimento, Francisco A. M. do and Oliveira, Marcio F. da S. and Wehrmeister, Marco A. and Pereira, Carlos E. and Wagner, Flavio R.}, 
	title = {{MDA-based Approach for Embedded Software Generation from a UML/MOF Repository}}, 
	booktitle = {SBCCI2006}, 
	isbn = {9781595934790}, 
	doi = {10.1145/1150343.1150383}, 
	url = {http://dx.doi.org/10.1145/1150343.1150383}, 
	abstract = {{This work presents a UML/MOF meta-modeling infrastructure, following the MDA approach, which is oriented to the design space exploration of embedded systems, based on the independent specification of application and platform. A mapping from the application into the platform is implemented by model transformations. A meta-data repository implementation is also introduced, automatically providing an Application Programming Interface (API) that is suitable to the manipulation of the UML meta-models and models and to the implementation of design tools for embedded systems. In order to illustrate the applicability of these resources, a source code generation tool for embedded software has been implemented and applied in a concrete case study.}}, 
	pages = {143--148}, 
	series = {Proceedings of the 19th annual symposium on Integrated circuits and systems design}, 
	publisher = {ACM}, 
	address = {Minas Gerais, Brazil}, 
	keywords = {Embedded systems design, Design space exploration, UML, MDA},
	selected=true
}


